---
- name: Get latest RKE download URL
  command : "curl -s https://api.github.com/repos/rancher/rke/releases/{{ rke_tag }}"
  register: rke_json
  when: rke_tag == "latest"

- name: Set rke_object variable
  set_fact:
    rke_object: "{{ rke_json.stdout | from_json }}"
  when: rke_tag == "latest"

- name: Set rke_download_url variable
  set_fact:
    rke_download_url: "{{ (rke_object.assets|selectattr('browser_download_url','contains','linux-amd64')|first).browser_download_url }}"
  loop_control:
    label: "{{ rke_object.tag_name }}"
  when: rke_tag == "latest"

- name: Get RKE
  become: true
  get_url:
    url: "{{ rke_download_url }}"
    dest: /usr/local/bin/rke
    mode: a+x
    force: yes
  when: rke_tag == "latest"

- name: Get tagged RKE download URL
  command : "curl -s https://api.github.com/repos/rancher/rke/releases/tags/{{ rke_tag }}"
  register: rke_json
  when: rke_tag != "latest"

- name: Set tagged rke_object variable
  set_fact:
    rke_object: "{{ rke_json.stdout | from_json }}"
  when: rke_tag != "latest"

- name: Set tagged rke_download_url variable
  set_fact:
    rke_download_url: "{{ (rke_object.assets|selectattr('browser_download_url','contains','linux-amd64')|first).browser_download_url }}"
  loop_control:
    label: "{{ rke_object.tag_name }}"
  when: rke_tag != "latest"

- name: Get tagged RKE
  become: true
  get_url:
    url: "{{ rke_download_url }}"
    dest: /usr/local/bin/rke
    mode: a+x
    force: yes
  when: rke_tag != "latest"
