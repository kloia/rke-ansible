# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

JUMP_IP = "192.168.44.186"
TEST_N1_IP = "192.168.44.188"
TEST_N2_IP = "192.168.44.189"
TEST_N3_IP = "192.168.44.190"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "bento/ubuntu-18.04"
  config.ssh.insert_key = false
  config.vm.provider "virtualbox"

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "../", "/vagrant", privileged: true

  # Define four VMs with static private IP addresses.
  boxes = [
    { :name => "n1", :ip => TEST_N1_IP },
    { :name => "n2", :ip => TEST_N2_IP },
    { :name => "n3", :ip => TEST_N3_IP },
    { :name => "ansible", :ip => JUMP_IP }
  ]

  # Provision each of the VMs.
  boxes.each do |opts|
    config.vm.define opts[:name] do |box|

      box.vm.hostname = opts[:name]
      box.vm.network :private_network, ip: opts[:ip]

      box.vm.provision "shell", inline: "cp /vagrant/test/id_rsa.pub /home/vagrant/.ssh/id_rsa.pub", privileged: false
      box.vm.provision "shell", inline: "cat /vagrant/test/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys"

      if ['n1', 'n2', 'n3'].include?(opts[:name])
        box.vm.provider :virtualbox do |v|
          v.memory = 2048
          v.cpus = 2
          v.linked_clone = true
        end
      end

      if opts[:name] == "ansible"
        box.vm.provider :virtualbox do |v|
          v.memory = 512
          v.cpus = 1
        end

        #vagrant ssh keys
        box.vm.provision "shell", inline: "cp /vagrant/test/id_rsa /tmp/id_rsa", privileged: false
        box.vm.provision "shell", inline: "chmod 600 /tmp/id_rsa", privileged: false

        box.vm.provision "shell", inline: "mkdir -p /etc/ansible", privileged: true
        box.vm.provision "shell", inline: "cp /vagrant/test/ansible.cfg /etc/ansible/ansible.cfg", privileged: true, run: "always"
        box.vm.provision "shell", inline: "echo 'cd /vagrant/test' >> /home/vagrant/.bashrc"

        box.vm.provision "ansible_local" do |ansible|
          ansible.limit = "all"
          ansible.install_mode = "pip"
          ansible.playbook = "/vagrant/playbooks/ping-playbook.yml"
          ansible.inventory_path = "/vagrant/test/inventory"
        end

       # box.vm.provision "shell", inline: "ansible-galaxy collection install amazon.aws", privileged: true
        box.vm.provision "shell", inline: "bash /vagrant/test/provision.sh"
      end
    end
  end
end
